<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video call</title>
    <style>
        #video-grid{
            display: grid;
            grid-template-columns: repeat(auto-fill, 300px);
            grid-auto-rows: 300px;
        }
        video{
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <div id="video-grid"></div>
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/peerjs@1.4.7/dist/peerjs.min.js"></script>
    <script>
        const socket = io("/")
        window.onload = () => {
            const VideoGrid = document.getElementById("video-grid");

            peer = new Peer();
            peers = {};

            const OwnVideo = document.createElement("video")
            OwnVideo.muted = true
            navigator.mediaDevices.getUserMedia({
                video:true,
                audio:true
            }).then((stream) => {
                addVideoStream(OwnVideo, stream);

                socket.on("user-disconnected", UID => {
                    if (peers[UID]){
                        peers[UID].close()
                    }
                })

                peer.on("call", call => {
                    call.answer(stream);
                    const video = document.createElement("video")
                    call.on("stream", (UserStream) => {
                        addVideoStream(video, UserStream);
                    })
                    call.on("close", () => {
                        video.remove();
                    })
                })

                socket.on("user-connected", (UserId) => {
                    console.log("New user", UserId);
                    connectNewUser(UserId, stream);
                })
            })

            peer.on("open", PeerId => {
                const RoomId = prompt("Enter room id : ");
                console.log("PeerId", PeerId)
                socket.emit("join-room", RoomId, PeerId);
            })

            function connectNewUser(UserId, stream){
                const call = peer.call(UserId, stream);
                const video = document.createElement("video")
                call.on("stream", (UserStream) => {
                    peers[UserId] = call
                    addVideoStream(video, UserStream);
                })
                call.on("close", () => {
                    video.remove();
                })
            }

            function addVideoStream(video, stream){
                video.srcObject = stream;
                video.addEventListener("loadedmetadata", () => {
                    video.play()
                })
                VideoGrid.append(video);
            }
        };

    </script>
</body>
</html>